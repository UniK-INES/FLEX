## General
spring.application.name=FLEX Market Server

## USEF related
APPLICATION_NAME=usef

## TESTING
de.unik.ines.soeasy.flex.testing.load=true
de.unik.ines.soeasy.flex.testing.start=false
de.unik.ines.soeasy.flex.requests.suppressExceptions=true
de.unik.ines.soeasy.flex.autostart=${SOEASY_FLEX_AUTOSTART:false}
#management.endpoints.web.exposure.include=*
#management.endpoints.web.expose=*
#management.endpoints.web.exposure.include=metrics
management.security.enabled=false

spring.main.allow-bean-definition-overriding=true

## SERVER
server.port=8080
server.contextPath=
de.unik.ines.soeasy.flex.swagger.basepath=

## SSL
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/dex.p12
server.ssl.key-store-password=WPoqahPtX0NCn1CxUTdy
server.ssl.key-alias=dex
security.require-ssl=true


## TIME CONFIGURATION
de.unik.ines.soeasy.flex.time.offset=0
de.unik.ines.soeasy.flex.time.factor=${SIMULATION_FACTOR:1}
de.unik.ines.soeasy.flex.time.zone=CET
de.unik.ines.soeasy.flex.time.basetime=${BASETIME:9223372036854775807}
de.unik.ines.soeasy.flex.time.matchbasetime=true

## METERING
de.unik.ines.soeasy.flex.metering.skipStorage=true
de.unik.ines.soeasy.flex.metering.deadline=5000
de.unik.ines.soeasy.flex.metering.validation.skip=false

## BALANCING
de.unik.ines.soeasy.flex.balance.schedule=false
de.unik.ines.soeasy.flex.balance.waitingTime=3000

## SCHEDULING
de.unik.ines.soeasy.flex.threadpool.size=5

## GRID SIMULATION
de.unik.ines.soeasy.flex.scheduleService.enable=true
de.unik.ines.soeasy.flex.scheduleService.iterations=2
de.unik.ines.soeasy.flex.scheduleService.url=https://localhost:9443
de.unik.ines.soeasy.flex.scheduleService.apikey=1234

de.unik.ines.soeasy.flex.grid.potentials.calculate=true

de.unik.ines.soeasy.flex.init.demandSMD=${DEMAND_SMD_FILE:json/GridFlexDemand_Schedule_MarketDocument_Initial.json}

## DATABASE
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres

spring.datasource.tomcat.initialSize=5
spring.datasource.tomcat.max-idle=5
spring.datasource.tomcat.max-active=20
spring.datasource.jmxEnabled=true
spring.datasource.initialize=true

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.generate-ddl=true

# https://stackoverflow.com/a/23678638/3957413
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true

#spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true

spring.datasource.url=jdbc:postgresql://localhost:5432/flex
spring.datasource.username=flex
spring.datasource.password=flex!
#spring.datasource.dialect=de.unik.ines.soeasy.flex.util.PgSqlConfiguration
#spring.jpa.properties.hibernate.dialect=de.unik.ines.soeasy.flex.util.PgSqlConfiguration

db.dump.targetdir=/daten/INES/Projekte/Ladeinfrastruktur/UseCases/Flexibilitäten/Daten/dbdumps
db.dump.filename=FLEXdump
db.dump.port=5432
db.dump.database=flex

de.unik.ines.soeasy.flex.db.storeInvalidRequests=true
de.unik.ines.soeasy.flex.db.renameInvalidRequests=false

# expects an absolute path here, as it seems:
#spring.datasource.data=setup.sql

## ADMIN
spring.boot.admin.client.url=https://localhost:8088/admin-server/
spring.boot.admin.client.name=FLEX Market Server
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=multimodalES
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}
spring.boot.admin.client.instance.metadata.tags.environment=DEV
info.tags.environment=gyges

#management.endpoints.web.exposure.include=httptrace,loggers,health,info,metrics
management.endpoints.web.exposure.include=*

management.endpoint.logfile.external-file=/home/li20/java/flex-server/logdir/FLEX_log.log
management.endpoint.health.show-details=always

spring.security.user.name=admin
spring.security.user.password=multimodalES


## AUTHENTICATION (REST-API)
de.unik.ines.soeasy.flex.admin.username=admin
de.unik.ines.soeasy.flex.admin.password=multimodalES

de.unik.ines.soeasy.flex.user.username=flex
de.unik.ines.soeasy.flex.user.password=flex!


## LOGGING
spring.profiles.active=requests
spring.output.ansi.enabled=always

logging.config=classpath:logback-spring.xml

#logging.level.org.springframework.web=DEBUG
logging.level.*=WARN
#logging.level.org=DEBUG
logging.level.org.springframework.boot.autoconfigure.security = INFO
#logging.file=FLEX_market_backend.log
